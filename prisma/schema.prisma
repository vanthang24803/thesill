// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  firstname      String?
  lastname       String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?   @default("")
  numberPhone    String?   @default("")
  address        String?   @default("")
  role           String    @default("member")
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  orders   Order[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  userId      String      @db.ObjectId
  firstname   String?
  lastname    String?
  email       String?
  address     String?
  numberPhone String?
  company     String?
  city        String?
  zip         Int
  total       Float
  status      String      @default("ordered")
  createdAt   DateTime    @default(now())
  updateAt    DateTime
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items       OrderItem[]
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  productId String
  name      String
  image     String?
  sale      Int
  price     String
  size      String?
  color     String?
  quantity  Int

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
